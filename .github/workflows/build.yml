name: Build and Publish Package

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*.*.*'
  workflow_dispatch:

concurrency:
  group: build-release-docker
  cancel-in-progress: true

jobs:
  build-artifacts:
    name: Build on ${{ matrix.python-version }} in Docker
    runs-on: ubuntu-latest
    env:
      PYTHONUTF8: "1"
      PYTHONIOENCODING: "utf-8"

    strategy:
      matrix:
        python-version: [ "2.7", "3.12" ]
        # 定义对应 Python 版本的 Docker 镜像
        include:
          - python-version: "2.7"
            docker_image: python:2.7-slim
          - python-version: "3.12"
            docker_image: python:3.12-slim

    container: ${{ matrix.docker_image }} # 使用矩阵中定义的镜像作为构建环境

    steps:
      - name: 📥 Checkout source code
        uses: actions/checkout@v4

      # 在容器内，PYTHON_EXEC 就是 'python'
      - name: Set PYTHON_EXEC (Container Context)
        run: echo "PYTHON_EXEC=python" >> $GITHUB_ENV

      - name: 📚 Install build dependencies
        run: |
          pip install --upgrade pip
          # 对于 2.7 和 3.12，我们需要 setuptools 和 wheel
          pip install setuptools wheel build
        shell: bash

      - name: 🏗️ Build Artifacts
        run: |
          if [[ "${{ matrix.python-version }}" == "3.12" ]]; then
            echo "Building sdist and wheel for Python 3.12..."
            # 使用 build 工具进行现代构建
            python -m build
          else
            echo "Building sdist for Python 2.7..."
            # 2.7 环境使用 setup.py 构建 sdist
            python setup.py bdist_wheel
          fi
        shell: bash

      - name: ⬆️ Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          # 区分 Artifact 名称，避免 2.7 和 3.12 的产物混淆
          name: artifacts-py${{ matrix.python-version }}
          path: dist/*
          retention-days: 7

  # --- Job 2: 发布到 PyPI ---
  publish:
    name: Publish to PyPI
    needs: build-artifacts
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pip-fc
    permissions:
      id-token: write

    steps:
      # 1. 下载所有构建产物
      - name: Download Py2.7 Artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts-py2.7
          path: dist-py27/

      - name: Download Py3.12 Artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts-py3.12
          path: dist-py312/

      - name: Merge artifacts for unified publishing
        run: |
          echo "Merging artifacts from build jobs..."
          mkdir -p dist
          # 复制 2.7 的 sdist
          cp -r dist-py27/* dist/
          # 复制 3.12 的 sdist 和 wheel (覆盖同名 sdist)
          cp -r dist-py312/* dist/
        shell: bash

      # 2. 准备发布环境 (使用最新的 Python 3.x 环境进行发布操作)
      - name: 🐍 Set up Python for Publishing (3.12)
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 3. 发布到 TestPyPI
      - name: Publish all artifacts to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          verbose: true
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TESTPYPI_API_TOKEN }}

      # 4. 发布到正式 PyPI
      - name: Publish to PyPI (Official Release)
        if: success() && startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-rc')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
